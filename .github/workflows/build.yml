---
name: 'build'

on:
  push:
    branches:
      - master

jobs:
  image-build:
    runs-on: arc-runner-set
    steps:
      - name: Force Install GIT latest
        run: |
          sudo apt-get update \
          && sudo apt-get install -y software-properties-common \
          && sudo apt-get update \
          && sudo add-apt-repository -y ppa:git-core/ppa \
          && sudo apt-get update \
          && sudo apt-get install -y git
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            BUILD_TYPE=extras
            FFMPEG=true
            IMAGE_TYPE=extras
            BASE_IMAGE=ubuntu:22.04
            GRPC_BASE_IMAGE=ubuntu:22.04
            GRPC_MAKEFLAGS=--jobs=4 --output-sync=target
            GRPC_VERSION=v1.65.0
            MAKEFLAGS=--jobs=4 --output-sync=target
          context: .
          file: ./Dockerfile
          cache-from: type=gha
          platforms: ${{ inputs.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}  
      #- name: Build and push AIO image
      #  uses: docker/build-push-action@v6
      #  with:
      #    builder: ${{ steps.buildx.outputs.name }}
      #    build-args: |
      #      BASE_IMAGE=localai/localai:${{ steps.meta.outputs.version }}
      #      MAKEFLAGS=${{ inputs.makeflags }}
      #    context: .
      #    file: ./Dockerfile.aio
      #    platforms: ${{ inputs.platforms }}
      #    push: ${{ github.event_name != 'pull_request' }}
      #    tags: ${{ steps.meta_aio_dockerhub.outputs.tags }}
      #    labels: ${{ steps.meta_aio_dockerhub.outputs.labels }}
